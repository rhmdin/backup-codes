const { nanoid } = require('nanoid');
const books = require('./bookshelf');

const addBookHandler = (request, h) => {
    const { 
        name, year, author, summary, 
        publisher, pageCount, readPage 
    } = request.payload;
    let { reading } = request.payload;
    const id = nanoid(16);
    const createdAt = new Date().toISOString();
    const updatedAt = createdAt;

    if(pageCount === readPage){
        let finished = true;
    }
    else{
        let finished = false;
    }

    if(!name || name === null){
        const response = h.response({
            status: "fail",
            message: "Gagal menambahkan buku. Mohon isi nama buku"
        });
        response.code(400);
    }
    if(readPage > pageCount){
        const response = h.response({
            status: "fail",
            message: "Gagal menambahkan buku. readPage tidak boleh lebih besar dari pageCount"
        });
        response.code(400);
    }

    const newBook = {
        id, name, year, author, summary, 
        publisher, pageCount, readPage, 
        finished, reading, insertedAt, updatedAt
    };


    books.push(newBook);
    const isSuccess = books.filter((book) => book.id === id).length>0;

    if(isSuccess){
        const response = h.response({
            status: "success",
            message: "Buku berhasil ditambahkan",
            data: {
                bookId: id,
            },
        })
        response.code(201);
        return response;
    }
    const response = h.response({
        status: 'fail',
        message: 'Adding book is failed :(',
    });
    response.code(500);
    return response

};

module.exports = {
    addBookHandler
};
